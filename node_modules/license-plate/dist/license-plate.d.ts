export default class LicensePlate {
    /**
     * License plate.
     *
     * @private
     * @readonly
     * @type {string}
     */
    private readonly licensePlate;
    /**
     * Constructs the licence plate with the input value as uppercase.
     */
    constructor(licensePlate: string);
    /**
     * Checks if the given license plate is valid.
     *
     * @public
     * @return {boolean} True if sidecode matches, false if none matches.
     */
    valid(): boolean;
    /**
     * Finds the matching sidecode by the given license plate. and returns
     * the index of the sidecode in a human-readable format (+1).
     *
     * @public
     * @return {number} The index of the sidecode, 0 if not found.
     */
    sidecode(): number;
    /**
     * Finds the matching sidecode and returns the Regex pattern associated.
     *
     * @private
     * @return {RegExp} The Regex pattern.
     */
    private getSidecodePattern;
    /**
     * Converts a license plate to the Regex equivalent based on the sidecode found.
     *
     * @private
     * @param sidecode {RegExp} The Regex pattern to use when converting input plate.
     */
    private convertPlate;
    /**
     * Formats the input license plate to real license plate based on the matched sidecode.
     *
     * @public
     * @returns {string} The formatted license plate.
     */
    pretty(): string;
    /**
     * Checks whether the given license plate included some forbidden letter combinations.
     *
     * Starting from sidecode 7, political abbreviations from political parties were excluded,
     * except VVD, they were excluded starting from sidecode 8.
     *
     * Sources:
     * https://nl.wikipedia.org/wiki/Nederlands_kenteken
     * https://www.rdw.nl/particulier/voertuigen/auto/de-kentekenplaat/cijfers-en-letters-op-de-kentekenplaat
     *
     * @return {boolean}
     * @private
     */
    private forbidden;
}
